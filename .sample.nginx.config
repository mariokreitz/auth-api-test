# .sample.nginx.conf

# Nginx-Optionen
user www-data;
worker_processes auto;
pid /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Setzen der SSL-Optionen (falls SSL aktiviert)
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_prefer_server_ciphers on;

    # Upstream-Server für die verschiedenen APIs (Backend-Server)
    upstream api_server {
        server server:3000;  # Dies ist der Name des Docker-Containers für deinen API-Server
    }

    # Reverse Proxy für die API
    server {
        listen 80;

        server_name api.example.com;  # Die Domain, die auf deinen Server zeigt

        location / {
            proxy_pass http://api_server;  # Weiterleitung an den API-Server
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Beispiel für HTTPS (SSL) - falls benötigt
    # server {
    #     listen 443 ssl;
    #     server_name api.example.com;
    #
    #     ssl_certificate /etc/nginx/ssl/api.example.com.crt;
    #     ssl_certificate_key /etc/nginx/ssl/api.example.com.key;
    #
    #     location / {
    #         proxy_pass http://api_server;
    #         proxy_set_header Host $host;
    #     }
    # }
}
